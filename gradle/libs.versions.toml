[versions]
agp = "8.11.2"
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
androidDriver = "1.5.5"
androidx-activity = "1.11.0"
androidx-appcompat = "1.7.1"
androidx-core = "1.17.0"
androidx-espresso = "3.7.0"
androidx-lifecycle = "2.9.4"
androidx-testExt = "1.3.0"
composeCharts = "1.1.0"
composeMultiplatform = "1.9.0"
coroutinesExtensions = "1.5.5"
decompose = "3.4.0"
extensionsCompose = "3.4.0"
junit = "4.13.2"
koinCore = "4.1.1"
kotlin = "2.2.20"
kotlinxCoroutinesCore = "1.10.2"
kotlinxSerializationCore = "1.9.0"
ktorClientCio = "3.3.1"
ktorClientLogging = "3.3.1"
nativeDriver = "1.5.5"
runtime = "1.5.5"

[libraries]
compose-charts = { module = "io.github.thechance101:chart", version.ref = "composeCharts" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "extensionsCompose" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinCore" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCore" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerializationCore" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationCore" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClientLogging" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientLogging" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClientLogging" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktorClientLogging" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientLogging" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientLogging" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktorClientLogging" }
ktor-ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClientCio" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClientLogging" }
material-icons-core = { module = "org.jetbrains.compose.material:material-icons-core" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended" }
sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "coroutinesExtensions" }
sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "runtime" }
sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "androidDriver" }
sqldelight-native-driver = { module = "com.squareup.sqldelight:native-driver", version.ref = "nativeDriver" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }